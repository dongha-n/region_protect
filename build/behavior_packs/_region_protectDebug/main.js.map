{"version":3,"sources":["main.ts"],"names":[],"mappings":"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","file":"../region_protect/scripts/main.js","sourcesContent":["import { world } from \"@minecraft/server\";\nimport type { Vector3 } from \"@minecraft/server\";\n\ninterface RegionProtect {\n  [key: string]: Vector3;\n}\n\nconst REGION_PROTECT_BLCOK = \"minecraft:diamond_block\";\nconst KEY = \"key\";\nconst R = 5;\nlet storage: RegionProtect | null = null;\nconst doorTypeId = \"minecraft:wooden_door\";\n\nworld.afterEvents.worldInitialize.subscribe((param) => {\n  const val = world.scoreboard.getObjective(KEY);\n  if (!val) {\n    world.scoreboard.addObjective(KEY, \"{}\");\n    storage = {};\n  } else {\n    storage = JSON.parse(val.displayName);\n  }\n\n  world.sendMessage(\"init\");\n});\n\nfunction generate_outline_boundary({ x, y, z }: Vector3) {\n  return {\n    lbb: {\n      x: x - R,\n      y: y - R,\n      z: z - R,\n    },\n    rub: {\n      x: x + R,\n      y: y + R,\n      z: z + R,\n    },\n  };\n}\n\nfunction generate_outline(pos: Vector3) {\n  return [\n    {\n      begin: {\n        x: pos.x - R,\n        y: pos.y - R,\n        z: pos.z - R,\n      },\n      end: {\n        x: pos.x + R,\n        y: pos.y - R,\n        z: pos.z - R,\n      },\n      block: \"minecraft:red_stained_glass\",\n    },\n    {\n      begin: {\n        x: pos.x - R,\n        y: pos.y + R,\n        z: pos.z - R,\n      },\n      end: {\n        x: pos.x + R,\n        y: pos.y + R,\n        z: pos.z - R,\n      },\n      block: \"minecraft:red_stained_glass\",\n    },\n    {\n      begin: {\n        x: pos.x - R,\n        y: pos.y - R,\n        z: pos.z + R,\n      },\n      end: {\n        x: pos.x + R,\n        y: pos.y - R,\n        z: pos.z + R,\n      },\n      block: \"minecraft:red_stained_glass\",\n    },\n    {\n      begin: {\n        x: pos.x - R,\n        y: pos.y + R,\n        z: pos.z + R,\n      },\n      end: {\n        x: pos.x + R,\n        y: pos.y + R,\n        z: pos.z + R,\n      },\n      block: \"minecraft:red_stained_glass\",\n    },\n    {\n      begin: {\n        x: pos.x - R,\n        y: pos.y - R,\n        z: pos.z - R,\n      },\n      end: {\n        x: pos.x - R,\n        y: pos.y - R,\n        z: pos.z + R,\n      },\n      block: \"minecraft:red_stained_glass\",\n    },\n    {\n      begin: {\n        x: pos.x + R,\n        y: pos.y - R,\n        z: pos.z - R,\n      },\n      end: {\n        x: pos.x + R,\n        y: pos.y - R,\n        z: pos.z + R,\n      },\n      block: \"minecraft:red_stained_glass\",\n    },\n    {\n      begin: {\n        x: pos.x - R,\n        y: pos.y + R,\n        z: pos.z - R,\n      },\n      end: {\n        x: pos.x - R,\n        y: pos.y + R,\n        z: pos.z + R,\n      },\n      block: \"minecraft:red_stained_glass\",\n    },\n    {\n      begin: {\n        x: pos.x + R,\n        y: pos.y + R,\n        z: pos.z - R,\n      },\n      end: {\n        x: pos.x + R,\n        y: pos.y + R,\n        z: pos.z + R,\n      },\n      block: \"minecraft:red_stained_glass\",\n    },\n    {\n      begin: {\n        x: pos.x - R,\n        y: pos.y - R,\n        z: pos.z - R,\n      },\n      end: {\n        x: pos.x - R,\n        y: pos.y + R,\n        z: pos.z - R,\n      },\n      block: \"minecraft:red_stained_glass\",\n    },\n    {\n      begin: {\n        x: pos.x + R,\n        y: pos.y - R,\n        z: pos.z - R,\n      },\n      end: {\n        x: pos.x + R,\n        y: pos.y + R,\n        z: pos.z - R,\n      },\n      block: \"minecraft:red_stained_glass\",\n    },\n    {\n      begin: {\n        x: pos.x - R,\n        y: pos.y - R,\n        z: pos.z + R,\n      },\n      end: {\n        x: pos.x - R,\n        y: pos.y + R,\n        z: pos.z + R,\n      },\n      block: \"minecraft:red_stained_glass\",\n    },\n    {\n      begin: {\n        x: pos.x + R,\n        y: pos.y - R,\n        z: pos.z + R,\n      },\n      end: {\n        x: pos.x + R,\n        y: pos.y + R,\n        z: pos.z + R,\n      },\n      block: \"minecraft:red_stained_glass\",\n    },\n  ];\n}\n\nfunction isBoundary(pos: Vector3, bpos: Vector3) {\n  const { lbb, rub } = generate_outline_boundary({ ...pos, y: pos.y + R });\n  return lbb.x <= bpos.x && bpos.x <= rub.x && lbb.y <= bpos.y && bpos.y <= rub.y && lbb.z <= bpos.z && bpos.z <= rub.z;\n}\n\nworld.afterEvents.playerPlaceBlock.subscribe((param) => {\n  if (!storage) {\n    return;\n  }\n  if (param.dimension.id !== \"minecraft:overworld\") {\n    return;\n  }\n  // world.sendMessage(`${param.dimension.id} ${param.block.typeId}`);\n\n  if (param.block.typeId === REGION_PROTECT_BLCOK) {\n    for (const key of Object.keys(storage)) {\n      const pos = storage[key];\n\n      if (isBoundary(pos, param.block.location)) {\n        world.sendMessage(\"근처 건차가 존재합니다.\");\n        return;\n      }\n    }\n    storage[param.player.id] = param.block.location as Vector3;\n    world.scoreboard.removeObjective(KEY);\n    world.scoreboard.addObjective(KEY, JSON.stringify(storage));\n\n    // fills(param.dimension.fillBlocks, param.block.location);\n    generate_outline({ ...param.block.location, y: param.block.location.y + R }).map(({ begin, end, block }) =>\n      param.dimension.fillBlocks(begin, end, block)\n    );\n  }\n});\n\nworld.beforeEvents.playerInteractWithBlock.subscribe((param) => {\n  if (!storage) {\n    return;\n  }\n  if (param.block.typeId === doorTypeId) {\n    for (const key of Object.keys(storage)) {\n      const pos = storage[key];\n\n      if (isBoundary(pos, param.block.location)) {\n        if (key !== param.player.id) {\n          param.cancel = true;\n        }\n        return;\n      }\n    }\n  }\n});\n\nworld.beforeEvents.playerBreakBlock.subscribe((param) => {\n  if (!storage) {\n    return;\n  }\n  const bpos = param.block.location;\n  for (const key of Object.keys(storage)) {\n    const pos = storage[key];\n    if (param.player.id === key) {\n      continue;\n    }\n    if (isBoundary(pos, bpos)) {\n      param.cancel = true;\n      return;\n    }\n  }\n});\n\n// TODO explosion exception\nworld.beforeEvents.explosion.subscribe((param) => {\n  if (!storage) {\n    return;\n  }\n  const blocks = param.getImpactedBlocks();\n  for (const key of Object.keys(storage)) {\n    const pos = storage[key];\n\n    blocks.forEach((block) => {\n      if (isBoundary(pos, block.location)) {\n        param.cancel = true;\n        return;\n      }\n    });\n  }\n});\n\n// TODO piston exception\nworld.beforeEvents.pistonActivate.subscribe((param) => {\n  if (!storage) {\n    return;\n  }\n  const blocks = param.piston.getAttachedBlocks();\n\n  for (const key of Object.keys(storage)) {\n    const pos = storage[key];\n    blocks.forEach((bpos) => {\n      if (isBoundary(pos, bpos)) {\n        param.cancel = true;\n        return;\n      }\n    });\n  }\n});\n"],"sourceRoot":"../../../scripts/"}